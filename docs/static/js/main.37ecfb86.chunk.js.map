{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCateogrias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","key","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAY5C,OACI,0BAAMC,SARY,SAACC,GACnBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAKd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAfe,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,Y,uBCLlBG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAUH,GAD7C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAIQ,EAAIG,OAAOC,iBAAiBZ,QARpB,kBAWbM,GAXa,4CAAH,sDCERO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAO,GACPa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAkBtC,OAZAC,qBAAW,WACPxB,EAAUC,GACLwB,MAAK,SAAAd,GAEFY,EAAS,CACLf,KAAOG,EACPU,SAAS,SAIvB,CAACpB,IAEIqB,EDfwBI,CAAazB,GAAhCa,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,yCAAyChB,GAEtDoB,GAAW,uBAAGJ,UAAU,oCAAb,cAEZ,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAAAC,GAAG,OACf,kBAAC,EAAD,eACQgB,IAAKhB,EAAIC,IACJD,UEhBpBiB,EAAe,WAAO,IAAD,EACMzC,mBAAS,CAAC,cADhB,mBACvB0C,EADuB,KACX3C,EADW,KAG9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI0B,IAAK1B,EACLA,SAAUA,U,MCbtC6B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.37ecfb86.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCateogrias}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handledInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n    const handledSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCateogrias( cat => [inputValue, ...cat]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handledSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue}\r\n                onChange={ handledInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n//para llamar las propTypes\r\nAddCategory.propTypes = {\r\n    setCateogrias: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifts = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=v9l3aOjrQZly9K0aJfwlgDmisYVOaGrx`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id : img.id,\r\n            title : img.title,\r\n            url:img.images.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport {GifGridItem} from './GifGridItem'\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInDown\">{category}</h3>\r\n            \r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                    <GifGridItem \r\n                            key={img.id}\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\nimport { getGifts } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data : [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifts( category )\r\n            .then(img => {\r\n                    \r\n                setstate({\r\n                    data : img,\r\n                    loading: false\r\n                })\r\n                \r\n            })\r\n    },[category])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n//RAFC pra crear un componente automaticamente\r\nexport const GifExpertApp = () => {\r\n    const [categorias, setCateogrias] = useState(['One Punch'])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCateogrias={setCateogrias} />\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    categorias.map( category => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}